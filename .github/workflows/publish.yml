# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Sites to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: self-hosted
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      
      - name: Download release asset from Hugo
        uses: actions/github-script@v6.4.0
        with:
          script: |            
            const { data: release } = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: "ai.replaces.me-hugo",
            });        
            console.log(release.tag_name);
            const { data: assets } = await github.rest.repos.listReleaseAssets({
              owner: context.repo.owner,
              repo: "ai.replaces.me-hugo",
              release_id: release.id
            });
            assets.forEach(async asset => {
              console.log(`Downloading ${asset.name}...`);
              const { data: content } = await github.rest.repos.getReleaseAsset({
                owner: context.repo.owner,
                repo: "ai.replaces.me-hugo",
                asset_id: asset.id,
                headers: {
                  Accept: 'application/octet-stream'
                }
              });
              require('fs').writeFileSync(asset.name, Buffer.from(content));
              console.log(`Downloaded ${asset.name}.`);
            });
            
      - name: Unzip release assets
        run: |
          rm -rf public
          unzip -o hugo.zip
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
